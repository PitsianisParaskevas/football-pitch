Football Pitch Geometry Overview

This document explains the geometry and layout of a standard football pitch rendered using SVG in a React component.

---

1. Canvas Size
- width: 800 pixels
- height: 500 pixels
- These dimensions define the drawing area for the entire football pitch.

---

2. Field Outline
- Drawn as a rectangle from (0, 0) to (800, 500)
- Represents the boundary of the pitch

---

3. Semi-Fields
- The pitch is visually divided by a center line
- centerX = width / 2 = 400
- The left and right halves represent each team's field side

---

4. Center Line
- A vertical line from (400, 0) to (400, 500)

---

5. Center Circle
- Center at (400, 250)
- Radius: 60px
- A small circle of radius 3px is also drawn at the center spot

---

6. Corner Arcs
- Radius: 12px
- Arcs are drawn at all four corners of the pitch using SVG path
- Top-left: Arc from (0, 12) to (12, 0)
- Top-right: Arc from (788, 0) to (800, 12)
- Bottom-left: Arc from (0, 488) to (12, 500)
- Bottom-right: Arc from (788, 500) to (800, 488)

---

7. Big Area (Penalty Area)
- Width: 120px
- Height: 300px
- Left side: starts at (0, 100)
- Right side: starts at (680, 100)

---

8. Small Area (Goal Box)
- Width: 40px
- Height: 160px
- Left side: starts at (0, 170)
- Right side: starts at (760, 170)

---

9. Goalposts
- Depth: 10px
- Height: 60px
- Left goal: drawn outside pitch from (-10, 220) to (0, 280)
- Right goal: drawn from (800, 220) to (810, 280)

---

10. Penalty Spots
- Radius: 3px
- Left penalty spot: (80, 250)
- Right penalty spot: (720, 250)

---

This geometry is scaled for a digital visualization, not a real-world size ratio, and can be mapped to normalized coordinates (0-100) for data overlays like formations, heatmaps, or shot locations.




_______________________________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________________________
______________________________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________________________



 FootballPitch Component ‚Äî Step-by-Step Breakdown
This component renders a dynamic football pitch using SVG. It‚Äôs fully configurable with props and supports both horizontal and vertical layouts.

1. Dimensions and Orientation
üîß width, height, direction
These props define the SVG canvas size and orientation.

Orientation ("horizontal" or "vertical") affects how we draw all elements.

js
Copy
Edit
const { pitchLength, pitchWidth, center, ... } = calculatePitchGeometry(width, height, direction);
pitchLength: main axis (horizontal ‚Üí left to right / vertical ‚Üí top to bottom)

pitchWidth: cross axis (width of the field)

2. Dynamic Coordinate Transformation
üîÅ applyDirection(x, y, direction)
This helper swaps and/or flips coordinates based on direction.

For "vertical", we rotate the pitch and flip the x-axis so it looks like a top-down view rotated 90¬∞.

3. Field Outline
üü© <rect x=0 y=0 width height />
Draws the outer boundary of the pitch.

Stroke color and line thickness are configurable.

4. Center Line
‚ö™ x = pitchLength / 2
A straight line splits the field in two equal halves.

Useful for positioning formations or showing team sides.

5. Center Circle + Spot
üîµ centerCircleRadius = 60
A large circle centered at the field middle.

The center spot is a small circle drawn using drawCircle(center.x, center.y, 3).

6. Penalty Areas (Big Box)
üü® Dimensions: 120 x 300
One on each side of the pitch (left & right for horizontal, top & bottom for vertical).

Positioned in the center vertically or horizontally, depending on direction.

7. Goal Areas (Small Box)
üü´ Dimensions: 40 x 160
Smaller boxes inside the penalty areas, centered around the goal.

Also responsive to direction.

8. Goalposts
ü•Ö Depth: 10, Height: 60
Rendered outside the main pitch (negative or overflow).

Always aligned with the center of the goal line.

9. Penalty Spots
‚ö´ Distance: 80 from each goal
Small dot inside each penalty area.

Centered vertically/horizontally based on direction.

10. Corner Arcs
‚≠ï
4 arcs drawn using <path /> with SVG arc commands.

The function drawArcPath(start, end, sweepFlag) handles each arc.

Sweep flag is dynamically flipped based on pitch direction to make arcs curve outward.

11. Children Layers
jsx
Copy
Edit
{children}
Allows nested components like:

FormationLayer

ShotLayer

HeatmapLayer

These layers render on top of the pitch with consistent coordinates.

üí° Summary
The pitch is built using:

Modular functions: calculatePitchGeometry, applyDirection, drawRect, drawCircle, drawArcPath

Dynamic props: orientation, colors, toggles

Layered architecture: children can add formations, visualizations, interactivity

Let me know if you want this in .txt/.md format or want to add a legend, scale bar, or interactivity next!